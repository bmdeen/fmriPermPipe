
% Wrapper for FSL's convert_xfm -concat, to combine affine transforms.
% Generates .json metadata for output transform.
%
% fpp.fsl.concatXfm(inputBtoC,inputAtoB,outputAtoC)

function concatXfm(inputBtoC,inputAtoB,outputAtoC)

% Define variable defaults
jsonOpts.indent = '\t';     % Use tab indentation for JSON outputs

cmd = ['convert_xfm -omat ' outputAtoC ' -concat ' inputBtoC ' ' inputAtoB];

% Run convert_xfm command
fpp.util.system(cmd);

% Write json output files
if ~isempty(fieldnames(fpp.bids.getMetadata(inputBtoC))) && ...
        ~isempty(fieldnames(fpp.bids.getMetadata(inputAtoB)))
    outputAtoCJsonPath = fpp.bids.jsonPath(outputAtoC);
    jsonDataAtoB = fpp.bids.getMetadata(inputAtoB);
    jsonDataBtoC = fpp.bids.getMetadata(inputBtoC);
    jsonData.Type = 'Affine';
    jsonData.Software = 'FLIRT';
    [~,flirtName] = fpp.util.system('flirt -version');
    jsonData.SoftwareVersion = strrep(strtrim(flirtName),'FLIRT version ','');
    jsonData.Invertible = true;
    jsonData.FromFile = jsonDataAtoB.FromFile;
    jsonData.ToFile = jsonDataBtoC.ToFile;
    jsonData.CommandLine = cmd;
    jsonData.Description = 'Affine transformation file generated by FLIRT.';
    bids.util.jsonencode(outputAtoCJsonPath,jsonData,jsonOpts);
end

end