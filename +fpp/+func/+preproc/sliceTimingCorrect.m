
% Function to apply slice timing correction using FSL's slicetimer.
%
% [errorMsg,outputPaths] = fpp.func.preproc.sliceTimingCorrect(inputPaths,...
%   sliceTimes,tr,outputDescShort,outputDescLong)
%
% Arguments:
% - inputPaths (string or cell array of strings): paths to input data
%
% Optional arguments:
% - sliceTimes (vector): slices times, in same unit as TR (default: read
%   from json file)
% - tr (scalar): repetition time (default: read from data)
% - outputDescShort (string): desc field of output filename
% - outputDescLong (string): output json Description

function [errorMsg,outputPaths] = sliceTimingCorrect(inputPaths,sliceTimes,tr,outputDescShort,outputDescLong)

% Info on slice time definition:
% - See https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FEAT/UserGuide
% - https://www.jiscmail.ac.uk/cgi-bin/wa-jisc.exe?A2=ind1703&L=FSL&P=R81364
% - https://www.jiscmail.ac.uk/cgi-bin/wa-jisc.exe?A2=ind1801&L=FSL&P=R17338

errorMsg = [];
outputPaths = [];

if ~iscell(inputPaths)
    inputPaths = {inputPaths};
end
% Check slice timing info and TR, if not specified
if ~exist('sliceTimes','var') || isempty(sliceTimes)
    sliceTimes = fpp.util.checkMRIProperty('ST',inputPaths{1});
    if isempty(sliceTimes)
        errorMsg = 'ERROR: slice timing info could not be determined.';
        return;
    end
end
if ~exist('tr','var') || isempty(tr)
    tr = fpp.util.checkMRIProperty('TR',inputPaths{1});
    if isempty(tr)
        errorMsg = 'ERROR: TR could not be determined.';
        return;
    end
end
% Define description info for output files
if ~exist('outputDescShort','var') || isempty(outputDescShort)
    outputDescShort = 'midprep2stc';
end
if ~exist('outputDescLong','var') || isempty(outputDescLong)
    outputDescLong = 'Partially preprocessed data generated by fmriPermPipe, saved after slice timing correction step.';
end

% Write ST info to temporary text file
[inputDir,~,~] = fpp.util.fileParts(inputPaths{1});
if isempty(inputDir), inputDir = pwd; end
stFilePath = [inputDir '/tmp_slice_timing_file.txt'];
fid = fopen(stFilePath,'w+');
fprintf(fid,'%f\n',.5-sliceTimes/tr);
fclose(fid);

% Apply FSL's slicetimer
for e=1:length(inputPaths)
    outputPaths{e} = fpp.bids.changeName(inputPaths{e},'desc',outputDescShort);
    fpp.util.system(['slicetimer -i ' inputPaths{e} ' -o ' outputPaths{e} ' --tcustom=' stFilePath]);
    fpp.bids.jsonReconstruct(inputPaths{e},outputPaths{e},'midprepfmri');
    fpp.bids.jsonChangeValue(outputPaths{e},{'Description','Sources'},...
        {outputDescLong,fpp.bids.removeBidsDir(inputPaths{e})});
end

fpp.util.system(['rm -rf ' stFilePath]);

end